#!/usr/local/bin/local/python3
import numpy as np
import pandas as pd
#import cv2 as cv

""" #Mouse callback function
def draw_shape(event,x,y,flags,param):
    print("event : ",event)
    if event == cv.EVENT_FLAG_LBUTTON:
        cv.circle(img,(x,y),100,(255,0,0),-1)

#Create a black image, a window and bind the function to the window
img = np.zeros((780,780,3),np.uint8)
cv.namedWindow('DrawWithMouse')
cv.setMouseCallback('DrawWithMouse',draw_shape)

while(1):
    cv.imshow('DrawWithMouse',img)
    if cv.waitKey(10) & 0xFF == 27: #ANDing with 0xFF as my machine is 64 bit
        break

cv.destroyWindow('DrawWithMouse') """
rawdata = [['1693316230.6914718', '598.33', '597.50', '23.51', '22.39', '26.38', '46.26', '700.123', '414'],
           ['1693316230.6914718', '598.33', '597.50', '23.51', '22.39', '26.38', '46.26', '700.123', '414'],
           ['1693316230.6914718', '598.33', '597.50', '23.51', '22.39', '26.38', '46.26', '700.123', '414']]


""" data = [1693316176.6677692, '534.17,535.00,,23.49,28.75,26.43,46.11,693.543,414;', 
        1693316178.6727612, '495.00,495.00,,23.49,22.51,26.43,46.13,693.146,413;', 
        1693316180.6799738, '629.17,629.17,,23.47,22.33,26.40,46.10,693.980,414;']  """

""" data = [1693817873.0380318, [75.0, 75.0, 23.27, 25.59, 25.63, 51.38, 686.28, 77661.0],
        1693817875.298624, [74.17, 74.17, 23.27, 25.75, 25.67, 51.39, 687.22, 80075.0],
            1693817877.714454, [69.17, 69.17, 23.27, 25.71, 25.63, 51.34, 688.52, 82488.0],
            1693817880.126427, [68.33, 68.33, 23.31, 25.77, 25.67, 51.25, 689.19, 84903.0],
                1693817882.5373518, [68.33, 68.33, 23.29, 25.75, 25.67, 51.23, 689.36, 87317.0],
                1693817884.9500248, [68.33, 68.33, 23.29, 25.73, 25.7, 51.17, 689.37, 89731.0],
                    1693817887.363371, [68.33, 68.33, 23.31, 25.77, 25.69, 51.13, 688.74, 92145.0],
                    1693817889.779103, [70.0, 70.83, 23.27, 25.65, 25.72, 50.97, 688.78, 94559.0],
                        1693817892.194098, [80.0, 80.0, 23.29, 25.65, 25.73, 50.98, 688.43, 96973.0],
                        1693817894.606803, [80.0, 80.0, 23.31, 25.71, 25.74, 50.96, 687.75, 99387.0],
                            1693817897.019779, [79.17, 79.17, 23.31, 25.63, 25.76, 50.94, 687.32, 101801.0],
                            1693817899.4332979, [78.33, 79.17, 23.31, 25.69, 25.77, 51.15, 691.57, 104215.0],
                                1693817901.8466718, [79.17, 79.17, 23.33, 25.69, 25.79, 51.13, 692.88, 106630.0],
                                1693817904.258162, [80.0, 78.33, 23.31, 25.73, 25.81, 51.1, 694.24, 109044.0],
                                    1693817906.671705, [77.5, 77.5, 23.31, 25.79, 25.8, 50.97, 696.43, 111457.0],
                                    1693817909.0867, [83.33, 83.33, 23.33, 25.81, 25.81, 50.81, 698.68, 113872.0],
                                        1693817911.501533, [80.0, 80.0, 23.37, 25.75, 25.83, 50.86, 698.87, 116286.0],
                                        1693817913.913895, [80.0, 80.0, 23.37, 25.79, 25.81, 50.81, 699.41, 118700.0],
                                            1693817916.3263319, [80.0, 80.0, 23.35, 25.79, 25.83, 50.85, 700.71, 121114.0],
                                            1693817918.7369442, [80.0, 80.0, 23.35, 25.79, 25.84, 50.86, 699.63, 123528.0],
                                                1693817921.153257, [80.0, 80.0, 23.37, 25.81, 25.85, 50.7, 696.38, 125942.0],
                                                1693817923.568085, [80.0, 80.0, 23.37, 25.79, 25.9, 50.59, 695.32, 128357.0],
                                                    1693817925.978952, [83.33, 86.67, 23.37, 25.81, 25.87, 50.6, 694.25, 130770.0],
                                                    1693817928.394677, [90.0, 88.33, 23.37, 25.73, 25.9, 50.54, 693.38, 133184.0],
                                                        1693817930.807789, [70.0, 70.83, 23.37, 25.89, 25.88, 50.46, 692.68, 135599.0],
                                                        1693817933.217386, [70.83, 70.83, 23.39, 25.85, 25.9, 50.46, 692.96, 138013.0]] """

data = [[1693820084.090162, 109.17, 110.0, 23.95, 26.13, 27.07, 47.64, 728.25, 2288700.0], [1693820086.096245, 97.5, 97.5, 23.95, 25.99, 27.08, 47.68, 728.38, 2291114.0], [1693820088.365669, 96.67, 96.67, 23.97, 26.03, 27.07, 47.71, 728.6, 2293528.0], [1693820090.779489, 77.5, 78.33, 23.95, 26.03, 27.07, 47.7, 728.86, 2295942.0], [1693820093.187357, 76.67, 76.67, 23.97, 26.07, 27.07, 47.7, 730.42, 2298356.0], [1693820095.604224, 72.5, 72.5, 23.99, 26.01, 27.07, 47.76, 731.74, 2300771.0], [1693820098.016682, 76.67, 76.67, 23.97, 25.99, 27.07, 47.67, 734.19, 2303184.0], [1693820100.434437, 77.5, 77.5, 23.97, 26.05, 27.07, 47.6, 748.54, 2305598.0], [1693820102.843316, 76.67, 76.67, 23.97, 25.99, 27.07, 47.55, 756.94, 2308012.0], [1693820105.2612622, 77.5, 77.5, 23.99, 26.07, 27.05, 47.51, 757.83, 2310427.0], [1693820107.6699278, 75.83, 75.83, 23.97, 26.01, 27.07, 47.44, 761.04, 2312841.0], [1693820110.0880508, 78.33, 78.33, 23.97, 25.99, 27.08, 47.43, 757.99, 2315255.0], [1693820112.500124, 81.67, 81.67, 23.97, 26.05, 27.07, 47.44, 752.66, 2317669.0], [1693820114.910634, 80.83, 80.83, 23.97, 25.93, 27.07, 47.43, 751.17, 2320083.0], [1693820117.324383, 80.83, 80.0, 23.97, 26.07, 27.08, 47.43, 748.06, 2322497.0], [1693820119.74212, 81.67, 81.67, 23.97, 25.97, 27.05, 47.42, 745.64, 2324911.0], [1693820122.154536, 81.67, 82.5, 23.95, 25.99, 27.07, 47.38, 739.2, 2327325.0], [1693820124.5687838, 80.83, 80.83, 23.97, 25.99, 27.07, 47.34, 743.96, 2329739.0], [1693820126.978411, 78.33, 78.33, 23.97, 26.03, 27.05, 47.41, 742.59, 2332154.0], [1693820129.3950799, 85.0, 88.33, 23.97, 25.99, 27.08, 47.41, 740.54, 2334567.0], [1693820131.808814, 81.67, 81.67, 23.97, 25.99, 27.07, 47.42, 740.15, 2336981.0], [1693820134.2249758, 80.83, 83.33, 23.97, 25.91, 27.1, 47.43, 740.14, 2339396.0], [1693820136.636949, 82.5, 83.33, 23.97, 25.99, 27.07, 47.46, 740.35, 2341810.0], [1693820139.0526028, 85.83, 85.83, 23.95, 25.89, 27.08, 47.41, 740.61, 2344224.0], [1693820141.468502, 83.33, 83.33, 23.97, 25.93, 27.07, 47.42, 740.58, 2346638.0], [1693820143.8779562, 84.17, 85.0, 23.93, 25.85, 27.08, 47.38, 738.72, 2349051.0], [1693820146.289902, 85.0, 85.0, 23.95, 25.93, 27.07, 47.41, 736.44, 2351466.0], [1693820148.70685, 83.33, 83.33, 23.97, 25.99, 27.07, 47.36, 737.11, 2353880.0], [1693820151.116352, 82.5, 82.5, 23.95, 26.05, 27.08, 47.36, 738.51, 2356294.0], [1693820153.5345101, 83.33, 83.33, 23.97, 25.95, 27.05, 47.34, 738.05, 2358707.0], [1693820155.9466, 83.33, 83.33, 23.93, 25.89, 27.07, 47.34, 737.52, 2361122.0]]

""" input_data = str('534.17,535.00,23.49,28.75,26.43,46.11,693.543,414')
print("input: ", input_data)
convdata = list(map(float, input_data.split(',')))
rounded = list(np.around(np.array(convdata),2))
 """
#convdata = list(input_data.split(','))
#convertdata = 
""" print(convdata)
print(rounded) """
bro = [[1693817873.0380318, 75.0, 75.0, 23.27, 25.59, 25.63, 51.38, 686.28, 77661.0],[1693817875.298624, 74.17, 74.17, 23.27, 25.75, 25.67, 51.39, 687.22, 80075.0]]
#bro = [1693817873.0380318, 75.0, 75.0, 23.27, 25.59, 25.63, 51.38, 686.28, 77661.0]
#bro.insert(0, 1693817873.0380318)
#bro.replace("],", "];")
#print(bro)
#print(data)

df = pd.DataFrame(data, columns=['Time','L1', 'L2', 'Amb','Obj', 'Temp', 'Humid', 'CO2', 'Elapsed'])
#df = pd.DataFrame(data)
#df.columns=['Time','L1', 'L2', 'Amb','Obj', 'Temp', 'Humid', 'CO2', 'Elapsed']
#df["Time"] = pd.to_datetime(df.loc[:,"Time"],unit='s')

#print("Collected Data: ", rawdata)
#print("DF: ", df)

df.to_csv("/Users/noor/Bot4BACS/Sensoring/serial_test.csv", index=False)

#dff = pd.read_csv("/Users/noor/Bot4BACS/Sensoring/serial_test.csv")
#print(dff)